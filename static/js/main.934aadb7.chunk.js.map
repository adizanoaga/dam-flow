{"version":3,"sources":["components/chart/MyChart.js","components/utility-functions/UtilityFunctions.js","start-data/Lacuri/Ibaneasa.data.js","start-data/StartData.js","App.js","components/overflow/Overflow.js","index.js"],"names":["MyChart","props","data","React","useMemo","axes","primary","type","position","style","width","height","tooltip","interpolareBiliniara","h","biliniarArray","minIndexA","i","length","minB","maxB","concatenareValori","x","y","xy","push","getH","NNR","overflow","coteLac","cotaVolumAtenuat","deltaT","leftSum","maxH","H","outflow","m","b","timpViituraOre","timpViituraSecunde","map","item","debiteViitura","parametriDeversor","volumeAtenuare","suprafeteLac","volume","volum","timpDebitOre","App","cotaAbsolutaApa","Math","pow","Overflow","generareGrafic","Q","arrayH","left","I1","I2","Q2","timpAtenuare","cotaAtenuare","timpCota","generateHidrograph","timpDebitAtenuare","dateHidrograf","label","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAGaA,EAAU,SAACC,GACtB,IAAMC,EAAOC,IAAMC,SACjB,kBAAMH,EAAMC,OACZ,CAACD,EAAMC,OAGHG,EAAOF,IAAMC,SACjB,iBAAM,CACJ,CAAEE,SAAS,EAAMC,KAAM,SAAUC,SAAU,UAC3C,CAAED,KAAM,SAAUC,SAAU,WAE9B,IAGF,OACE,qBACEC,MAAO,CACLC,MAAO,QACPC,OAAQ,SAHZ,SAME,cAAC,QAAD,CAAOT,KAAMA,EAAMG,KAAMA,EAAMO,SAAO,OCxBtCC,EAAuB,SAACC,EAAGC,GAC/B,IAAIC,EAAa,WACf,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAcG,OAAS,EAAGD,IAC5C,GAAIF,EAAcE,EAAI,GAAG,IAAMH,GAAKC,EAAcE,GAAG,IAAMH,EACzD,OAAOG,EAHI,GAObE,EAAOJ,EAAcC,GAAW,GAChCI,EAAOL,EAAcC,EAAY,GAAG,GAExC,OAAOG,GADQL,EAAIC,EAAcC,GAAW,KAAOD,EAAcC,EAAY,GAAG,GAAKD,EAAcC,GAAW,KACrFI,EAAOD,IAG5BE,EAAoB,SAACC,EAAGC,GAE5B,IADA,IAAIC,EAAK,GACAP,EAAI,EAAGA,EAAIK,EAAEJ,OAAQD,IAC5BO,EAAGC,KAAK,CAACH,EAAEL,GAAIM,EAAEN,KAEnB,OAAOO,GAGHE,EAAO,SAACC,EAAKC,EAAUC,EAASC,EAAkBC,EAAQC,GAG9D,IAFA,IAAIC,EAAOJ,EAAQA,EAAQX,OAAS,GAE3BgB,EAAIP,EAAKO,EAAID,EAAMC,GADZ,IAC4B,CAI1C,IADiB,EAFRrB,EAAqBqB,EAAGJ,GAENC,EADlBH,EAASO,QAAQD,IAEXF,EAAU,IACvB,OAAOE,IC9BAhC,EAEM,CAAC,EAAG,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,GAFrDA,EAGA,CAAC,IAAK,MAAO,IAAK,MAAO,IAAK,OAH9BA,EAIK,CACV,KACA,KACA,KACA,IACA,KACA,OAVKA,EAYJ,IAZIA,EAaU,CAAEkC,EAAG,GAAKC,EAAG,GCV9BC,EDFW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,ICG9CC,EAAqBD,EAAeE,KAAI,SAAAC,GAAI,OAAW,KAAPA,KAChDC,EAAgBxC,EAChB2B,EAAU3B,EAEVyB,EAAMzB,EACNyC,EAAoBzC,EAEpB0C,EAAkB,SAACf,EAASgB,GAEhC,IADA,IAAIC,EAAS,CAAC,GACL7B,EAAI,EAAGA,EAAIY,EAAQX,OAAQD,IAAK,CACvC,IAAI8B,GAASF,EAAa5B,GAAK4B,EAAa5B,EAAI,IAAM,GAAKY,EAAQZ,GAAKY,EAAQZ,EAAI,IAAM6B,EAAO7B,EAAI,GACrG6B,EAAOrB,KAAKsB,GAEd,OAAOD,EANe,CAOrBjB,EAXkB3B,GAcf8C,GADmB3B,EAAkBkB,EAAoBG,GAC1CrB,EAAkBiB,EAAgBI,IACjDZ,EAAmBT,EAAkBQ,EAASe,GC4DrCK,MA9Df,WAEE,IAAMrB,ECtBgB,SAAC,GAAmB,IAAjBQ,EAAgB,EAAhBA,EAAGC,EAAa,EAAbA,EAAGV,EAAU,EAAVA,IAQ/B,MAAO,CAAEQ,QAPO,SAACe,GACf,IAAMpC,EAAIoC,EAAkBvB,EAC5B,OAAIb,EAAI,EACC,EAEFsB,EAAIC,EAAIc,KAAKC,IAAItC,EAAG,KAAOqC,KAAKC,IAAI,MAAU,MDgBtCC,CAAS,CAAEjB,EAAGO,EAAkBP,EAAGC,EAAGM,EAAkBN,EAAGV,IAAK,MA0B3E2B,EAvBqB,SAACf,EAAoBG,GAI9C,IAHA,IAAIa,EAAI,CAAC,GACLC,EAAS,CAAC7B,GACV8B,EAAO,EACFxC,EAAI,EAAGA,EAAIsB,EAAmBrB,OAAS,EAAGD,IAAK,CACtD,IAAIyC,EAAKhB,EAAczB,GACnB0C,EAAKjB,EAAczB,EAAI,GACvBc,EAASQ,EAAmBtB,EAAI,GAAKsB,EAAmBtB,GAExDiB,EAAIR,EAAKC,EAAKC,EAAUC,EAASC,EAAkBC,EADzC2B,EAAKC,EAAKF,GAEpBG,EAAKhC,EAASO,QAAQD,GAE1BuB,EAAO,EADE5C,EAAqBqB,EAAGJ,GACjBC,EAAS,EAAI6B,EAC7BL,EAAE9B,KAAKmC,GACPJ,EAAO/B,KAAKS,GAEd,MAAO,CACL2B,aAAcxC,EAAkBiB,EAAgBiB,GAChDO,aAAczC,EAAkBmC,EAAQD,GACxCQ,SAAU1C,EAAkBiB,EAAgBkB,IAIzBQ,CAAmBzB,EAAoBG,GACxDuB,EAAoBX,EAAeO,aAEnCK,EAAgB,CACpB,CACEC,MAAO,UACPjE,KAAM8C,GAER,CACEmB,MAAO,kBACPjE,KAAM+D,IAWJF,GAJIT,EAAeQ,aAIR,CAAC,CAChBK,MAAO,UACPjE,KAAMoD,EAAeS,YAGvB,OACE,sBAAKK,UAAU,MAAf,UACE,cAAC,EAAD,CAASlE,KAAMgE,IAEf,cAAC,EAAD,CAAShE,KAAM6D,QEzErBM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.934aadb7.chunk.js","sourcesContent":["import React from 'react';\nimport { Chart } from 'react-charts';\n\nexport const MyChart = (props) => {\n  const data = React.useMemo(\n    () => props.data,\n    [props.data]\n  );\n\n  const axes = React.useMemo(\n    () => [\n      { primary: true, type: 'linear', position: 'bottom' },\n      { type: 'linear', position: 'left' },\n    ],\n    []\n  );\n\n  return (\n    <div\n      style={{\n        width: '400px',\n        height: '300px',\n      }}\n    >\n      <Chart data={data} axes={axes} tooltip />\n    </div>\n  );\n};\n","const interpolareBiliniara = (h, biliniarArray) => {\n  let minIndexA = (() => {\n    for (let i = 0; i < biliniarArray.length - 1; i++) {\n      if (biliniarArray[i + 1][0] >= h && biliniarArray[i][0] <= h) {\n        return i;\n      }\n    }\n  })();\n  let minB = biliniarArray[minIndexA][1];\n  let maxB = biliniarArray[minIndexA + 1][1]\n  let percent = (h - biliniarArray[minIndexA][0]) / (biliniarArray[minIndexA + 1][0] - biliniarArray[minIndexA][0])\n  return minB + percent * (maxB - minB)\n};\n\nconst concatenareValori = (x, y) => {\n  let xy = [];\n  for (let i = 0; i < x.length; i++) {\n    xy.push([x[i], y[i]]);\n  }\n  return xy;\n};\n\nconst getH = (NNR, overflow, coteLac, cotaVolumAtenuat, deltaT, leftSum) => {\n  let maxH = coteLac[coteLac.length - 1];\n  let increment = 0.01\n  for (let H = NNR; H < maxH; H += increment) {\n    let S2 = interpolareBiliniara(H, cotaVolumAtenuat)\n    let Q2 = overflow.outflow(H)\n    let rightSum = ((2 * S2) / deltaT) + Q2\n    if (rightSum / leftSum > 0.95) {\n      return H\n    }\n  }\n}\n\nexport { interpolareBiliniara, concatenareValori, getH };\n","export const data = {\n    timpViitura: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n    debiteViitura: [0, 12, 48, 107, 190, 170, 123, 83, 48, 24, 8, 1],\n    coteLac: [105, 107.5, 110, 112.5, 115, 117.5], //deasupra NNR\n    suprafeteLac: [\n        280_000,\n        440_000,\n        760_000,\n        1_000_000,\n        1_900_000,\n        2_350_000,\n    ],\n    NNR: 105,\n    parametriDeversor: { m: 0.4, b: 3 }\n}\n\n","import { concatenareValori } from '../components/utility-functions/UtilityFunctions'\nimport { data } from './Lacuri/Ibaneasa.data'\n\nconst timpViituraOre = data.timpViitura\nconst timpViituraSecunde = timpViituraOre.map(item => item * 3600)\nconst debiteViitura = data.debiteViitura\nconst coteLac = data.coteLac\nconst suprafeteLac = data.suprafeteLac\nconst NNR = data.NNR\nconst parametriDeversor = data.parametriDeversor;\n\nconst volumeAtenuare = ((coteLac, suprafeteLac) => {\n  let volume = [0]\n  for (let i = 1; i < coteLac.length; i++) {\n    let volum = (suprafeteLac[i] - suprafeteLac[i - 1]) / 2 * (coteLac[i] - coteLac[i - 1]) + volume[i - 1]\n    volume.push(volum)\n  }\n  return volume\n})(coteLac, suprafeteLac);\n\nconst timpDebitSecunde = concatenareValori(timpViituraSecunde, debiteViitura);\nconst timpDebitOre = concatenareValori(timpViituraOre, debiteViitura);\nconst cotaVolumAtenuat = concatenareValori(coteLac, volumeAtenuare)\n\n\nexport {\n  timpViituraSecunde,\n  timpViituraOre,\n  debiteViitura,\n  coteLac,\n  timpDebitSecunde,\n  timpDebitOre,\n  NNR,\n  cotaVolumAtenuat,\n  parametriDeversor,\n  concatenareValori\n};\n","import './App.css';\nimport { MyChart } from './components/chart/MyChart';\nimport {\n  timpViituraSecunde,\n  debiteViitura,\n  coteLac,\n  timpDebitSecunde,\n  timpDebitOre,\n  NNR,\n  cotaVolumAtenuat,\n  parametriDeversor,\n  concatenareValori,\n  timpViituraOre\n} from './start-data/StartData';\nimport {\n  interpolareBiliniara,\n  getH\n} from './components/utility-functions/UtilityFunctions';\nimport { Overflow } from './components/overflow/Overflow'\n\nfunction App() {\n\n  const overflow = Overflow({ m: parametriDeversor.m, b: parametriDeversor.b, NNR: 105 })\n\n\n  const generateHidrograph = (timpViituraSecunde, debiteViitura) => {\n    let Q = [0];\n    let arrayH = [NNR]\n    let left = 0;\n    for (let i = 0; i < timpViituraSecunde.length - 1; i++) {\n      let I1 = debiteViitura[i];\n      let I2 = debiteViitura[i + 1]\n      let deltaT = timpViituraSecunde[i + 1] - timpViituraSecunde[i]\n      let leftSum = I1 + I2 + left;\n      let H = getH(NNR, overflow, coteLac, cotaVolumAtenuat, deltaT, leftSum)\n      let Q2 = overflow.outflow(H)\n      let S2 = interpolareBiliniara(H, cotaVolumAtenuat)\n      left = 2 * S2 / deltaT - 2 * Q2\n      Q.push(Q2)\n      arrayH.push(H)\n    }\n    return {\n      timpAtenuare: concatenareValori(timpViituraOre, Q),\n      cotaAtenuare: concatenareValori(arrayH, Q),\n      timpCota: concatenareValori(timpViituraOre, arrayH)\n    }\n  }\n\n  const generareGrafic = generateHidrograph(timpViituraSecunde, debiteViitura)\n  const timpDebitAtenuare = generareGrafic.timpAtenuare\n\n  const dateHidrograf = [\n    {\n      label: 'Viitura',\n      data: timpDebitOre\n    },\n    {\n      label: 'Grafic atenuare',\n      data: timpDebitAtenuare\n    }\n  ]\n\n  const dateHQ = [\n    {\n      label: 'Viitura',\n      data: generareGrafic.cotaAtenuare,\n    },\n  ]\n\n  const timpCota = [{\n    label: 'Viitura',\n    data: generareGrafic.timpCota,\n  },]\n\n  return (\n    <div className=\"App\">\n      <MyChart data={dateHidrograf} />\n      {/* <MyChart data={dateHQ} /> */}\n      <MyChart data={timpCota} />\n    </div>\n  );\n}\nexport default App;\n","export const Overflow = ({ m, b, NNR }) => {\n  const outflow = (cotaAbsolutaApa) => {\n    const h = cotaAbsolutaApa - NNR;\n    if (h < 0) {\n      return 0;\n    }\n    return m * b * Math.pow(h, 1.5) * Math.pow(2 * 9.81, 0.5);\n  };\n  return { outflow }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}